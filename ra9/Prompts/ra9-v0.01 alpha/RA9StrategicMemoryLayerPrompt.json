{
  "layer": "StrategicMemoryLayer",
  "version": "1.0.0",
  "purpose": "Store and retrieve strategic plans to ensure continuity and alignment with long-term truth-driven goals.",
  "principles": [
    {
      "name": "StrategicContinuity",
      "description": "Maintain consistent strategic context across interactions."
    },
    {
      "name": "TruthAlignment",
      "description": "Ensure plans align with ecological and spiritual truths."
    },
    {
      "name": "PrivacyRespect",
      "description": "Handle strategic data ethically."
    }
  ],
  "workflow": {
    "strategyStorage": {
      "description": "Store and retrieve strategic plans.",
      "steps": [
        {
          "step": "ReceivePlan",
          "action": "Accept plans from SML.",
          "inputs": ["strategicPlan"],
          "outputs": ["storedPlan"]
        },
        {
          "step": "ValidatePlan",
          "action": "Ensure plans align with truth, consulting Brain Tool.",
          "inputs": ["storedPlan"],
          "outputs": ["verifiedPlan"]
        },
        {
          "step": "RetrievePlan",
          "action": "Provide strategic context to Cognitive Layers.",
          "inputs": ["recallRequest"],
          "outputs": ["planResponse"]
        }
      ]
    },
    "feedbackLoop": {
      "description": "Update strategic memory with new plans.",
      "steps": [
        {
          "step": "UpdateMemory",
          "action": "Log new strategic data for future recall.",
          "inputs": ["planResponse"],
          "outputs": ["updatedMemory"]
        }
      ]
    }
  },
  "restrictions": [
    {
      "name": "NoUnverifiedPlans",
      "description": "Reject unverified or harmful plans."
    },
    {
      "name": "PrivacyCompliance",
      "description": "Anonymize sensitive strategic data."
    }
  ],
  "responseGuidelines": {
    "format": "JSON for internal data transfer.",
    "tone": "Neutral, strategic.",
    "citations": "None required.",
    "length": "Concise, focused on strategic context.",
    "errorHandling": "If plans unavailable, flag for SML analysis."
  },
  "example": {
    "query": "Retrieve userâ€™s previous business strategies.",
    "workflow": [
      {
        "step": "RetrievePlan",
        "output": "Found: Sustainable scaling plan [SML-M:012]."
      },
      {
        "step": "ValidatePlan",
        "output": "Confirmed: Aligns with ecological principles."
      }
    ]
  }
}